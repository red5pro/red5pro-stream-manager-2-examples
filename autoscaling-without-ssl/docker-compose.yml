---
version: '3.8'
name: autoscaling

services:
  kafka0:
    image: confluentinc/cp-kafka:latest
    restart: unless-stopped
    hostname: kafka0
    container_name: kafka0
    ports:
      - 9092:9092
      - 9997:9997
    environment:
      KAFKA_BROKER_ID: 1
      CLUSTER_ID: 'fMCL8kv1SWm87L_Md-I2hg'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka0:29092,PLAINTEXT_HOST://${KAFKA_HOST:?Ensure KAFKA_HOST is set to the IP address reachable by created as-nodes}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka0:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka0:29092,CONTROLLER://kafka0:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka0 -Dcom.sun.management.jmxremote.rmi.port=9997
    volumes:
      - kafka-data:/var/lib/kafka/data
      - ./update_run.sh:/tmp/update_run.sh
    command: "bash -c 'if [ ! -f /tmp/update_run.sh ]; then echo \"ERROR: Script was not found /tmp/update_run.sh\" && exit 1 ; else /tmp/update_run.sh && /etc/confluent/docker/run ; fi'"
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  as-admin:
    image: red5pro/as-admin:${AS_VERSION:-latest}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/admin/healthz"]
      start_period: 10s
    depends_on:
      kafka0:
        condition: service_healthy
    ports:
      - 8080
    deploy:
      replicas: 1
    environment:
      R5AS_STATE_DIRECTORY: /root/kafka-streams
      R5AS_AUTOSCALE_PARTITIONS: ${R5AS_AUTOSCALE_PARTITIONS:-1}
      R5AS_REPLICATION_FACTOR: ${R5AS_REPLICATION_FACTOR:-1}
      R5AS_BOOTSTRAP_SERVERS: kafka0:29092
      R5AS_TERRAFORM_QUERY_INTERVAL: 600000
      R5AS_SECURITY_PROTOCOL_CONFIG: ""
      R5AS_SSL_KEYSTORE_TYPE_CONFIG: ""
      R5AS_SSL_TRUSTSTORE_TYPE_CONFIG: ""
      R5AS_SSL_CA_CERTIFICATE: ""
      R5AS_SASL_USERNAME: ""
      R5AS_SASL_PASSWORD: ""
      R5AS_SASL_ENABLED_MECHANISMS: ""
      SPRINGDOC_API_DOCS_PATH: /as/v1/admin/v3/api-docs
      SPRINGDOC_SWAGGER_UI_URLS_0_URL: /as/v1/autoscale/v3/api-docs
      SPRINGDOC_SWAGGER_UI_URLS_0_NAME: autoscale
      SPRINGDOC_SWAGGER_UI_URLS_1_URL: /as/v1/auth/v3/api-docs
      SPRINGDOC_SWAGGER_UI_URLS_1_NAME: auth
      SPRINGDOC_SWAGGER_UI_URLS_2_URL: /as/v1/streams/v3/api-docs
      SPRINGDOC_SWAGGER_UI_URLS_2_NAME: streams
      SPRINGDOC_SWAGGER_UI_URLS_3_URL: /as/v1/admin/v3/api-docs
      SPRINGDOC_SWAGGER_UI_URLS_3_NAME: autoscale-admin
      R5AS_CLOUD_PLATFORM_TYPE: ${R5AS_CLOUD_PLATFORM_TYPE:?R5AS_CLOUD_PLATFORM_TYPE is not set}
      R5AS_AUTH_SECRET: ${R5AS_AUTH_SECRET:?R5AS_AUTH_SECRET is not set}
      R5AS_AUTH_JWT_TTL_MINUTES: ${R5AS_AUTH_JWT_TTL_MINUTES:-800}
      R5AS_WS_PING_PONG_INTERVAL_S: ${R5AS_WS_PING_PONG_INTERVAL_S:-30}
      R5AS_WS_PONG_TIMEOUT_S: ${R5AS_WS_PONG_TIMEOUT_S:-50}
    labels:
      traefik.http.routers.config-swagger.rule: "PathPrefix(`/swagger-ui`)"
      traefik.http.routers.config-swagger.entrypoints: "web"
      prometheus.scrape: true
      prometheus.path: /metrics
      traefik.enable: "true"
      traefik.http.routers.admin-springdoc.rule: "PathPrefix(`/as/v1/admin/v3`)"
      traefik.http.routers.admin-springdoc.entrypoints: "web"
      traefik.http.routers.admin-springdoc.middlewares: "strip-swagger-admin@docker"
      traefik.http.middlewares.strip-swagger-admin.stripprefix.prefixes: "/as/v1/admin"
      traefik.http.middlewares.strip-swagger-admin.stripprefix.forceSlash: "false"
      traefik.http.routers.as-admin.rule: "PathPrefix(`/as/v1/admin`)"
      traefik.http.routers.as-admin.entrypoints: "web"
      traefik.http.routers.as-admin.middlewares: "strip-admin@docker"
      traefik.http.middlewares.strip-admin.stripprefix.prefixes: "/as/v1/"
      traefik.http.middlewares.strip-admin.stripprefix.forceSlash: "false"

  as-terraform:
    restart: unless-stopped
    deploy:
      replicas: 1
    image: red5pro/as-terraform:${AS_VERSION:-latest}
    depends_on:
      kafka0:
        condition: service_healthy
    environment:
      R5AS_STATE_DIRECTORY: /root/kafka-streams
      R5AS_AUTOSCALE_PARTITIONS: ${R5AS_AUTOSCALE_PARTITIONS:-1}
      R5AS_REPLICATION_FACTOR: ${R5AS_REPLICATION_FACTOR:-1}
      R5AS_BOOTSTRAP_SERVERS: kafka0:29092
      R5AS_SECURITY_PROTOCOL_CONFIG: ""
      R5AS_SSL_KEYSTORE_TYPE_CONFIG: ""
      R5AS_SSL_TRUSTSTORE_TYPE_CONFIG: ""
      R5AS_SSL_CA_CERTIFICATE: ""
      R5AS_SASL_USERNAME: ""
      R5AS_SASL_PASSWORD: ""
      R5AS_SASL_ENABLED_MECHANISMS: ""
      R5AS_COMMAND_INACTIVITY_GAP_MS: ${R5AS_COMMAND_INACTIVITY_GAP_MS:-10000}
      TF_VAR_oci_tenancy_ocid: ${OCI_TENANCY_OCID}
      TF_VAR_oci_user_ocid: ${OCI_USER_OCID}
      TF_VAR_oci_compartment_id: ${OCI_COMPARTMENT_ID}
      TF_VAR_oci_fingerprint: ${OCI_FINGERPRINT}
      TF_VAR_oci_private_key_path: /home/ubuntu/.ssh/oracle_private_api_key.pem
      TF_VAR_oci_node_ssh_public_key_path: /home/ubuntu/.ssh/red5pro_ssh_public_key.pub
      TF_VAR_aws_access_key: ${AWS_ACCESS_KEY}
      TF_VAR_aws_secret_key: ${AWS_SECRET_KEY}
      TF_VAR_aws_ssh_key_pair: ${AWS_SSH_KEY_PAIR}
      TF_VAR_aws_enable_root_volume_block_encryption: ${AWS_ENABLE_ROOT_VOLUME_BLOCK_ENCRYPTION}
      TF_VAR_gcp_project_id: ${GCP_PROJECT_ID}
      TF_VAR_linode_api_token: ${LINODE_API_TOKEN}
      TF_VAR_linode_ssh_key_name: ${LINODE_SSH_KEY_NAME}
      TF_VAR_r5p_license_key: ${R5P_LICENSE_KEY:?R5P_LICENSE_KEY is not set}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./keys/oracle_private_api_key.pem:/home/ubuntu/.ssh/oracle_private_api_key.pem
      - ./keys/red5pro_ssh_public_key.pub:/home/ubuntu/.ssh/red5pro_ssh_public_key.pub
    
  as-proxy:
    image: red5pro/as-proxy:${AS_VERSION:-latest}
    restart: unless-stopped
    depends_on:
      kafka0:
        condition: service_healthy
    ports:
      - 9080:8080
    environment:
      R5AS_STATE_DIRECTORY: /root/kafka-streams
      R5AS_REPLICATION_FACTOR: ${R5AS_REPLICATION_FACTOR:-1}
      R5AS_BOOTSTRAP_SERVERS: kafka0:29092
      R5AS_SECURITY_PROTOCOL_CONFIG: ""
      R5AS_SSL_KEYSTORE_TYPE_CONFIG: ""
      R5AS_SSL_TRUSTSTORE_TYPE_CONFIG: ""
      R5AS_SSL_CA_CERTIFICATE: ""
      R5AS_SASL_USERNAME: ""
      R5AS_SASL_PASSWORD: ""
      R5AS_SASL_ENABLED_MECHANISMS: ""
      R5AS_AUTH_SECRET: ${R5AS_AUTH_SECRET:?R5AS_AUTH_SECRET is not set}
      R5AS_AUTH_JWT_TTL_MINUTES: ${R5AS_AUTH_JWT_TTL_MINUTES:-800}
      R5AS_TRAEFIK_HOST: ${TRAEFIK_HOST:-localhost}
      R5AS_AUTOSCALE_DOMAIN: ${TRAEFIK_HOST:-localhost}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.asproxy.rule=PathPrefix(`/as/v1/proxy`)"
      - "traefik.http.routers.asproxy.entrypoints=web"
      - "traefik.http.routers.asproxy.middlewares=strip-asproxy@docker"
      - "traefik.http.middlewares.strip-asproxy.stripprefix.prefixes=/as/v1/proxy"
      - "traefik.http.middlewares.strip-asproxy.stripprefix.forceSlash=false"

  as-autoscale-service:
    image: red5pro/as-autoscale-service:${AS_VERSION:-latest}
    restart: unless-stopped
    deploy:
      replicas: 1
    depends_on:
      kafka0:
        condition: service_healthy
      as-terraform:
        condition: service_started
      as-admin:
        condition: service_started
      as-auth:
        condition: service_started
      as-streams:
        condition: service_started
      reverse-proxy:
        condition: service_started

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/autoscale/healthz"]
      start_period: 10s
    ports:
      - "8080"
    environment:
      R5AS_STATE_DIRECTORY: /root/kafka-streams
      R5AS_AUTOSCALE_PARTITIONS: ${R5AS_AUTOSCALE_PARTITIONS:-1}
      R5AS_REPLICATION_FACTOR: ${R5AS_REPLICATION_FACTOR:-1}
      R5AS_BOOTSTRAP_SERVERS: kafka0:29092
      R5AS_BOOTSTRAP_SERVERS_FOR_NODES: ${KAFKA_HOST:?Ensure KAFKA_HOST is set to the IP address reachable by created as-nodes}:9092
      R5AS_SECURITY_PROTOCOL_CONFIG: ""
      R5AS_SSL_KEYSTORE_TYPE_CONFIG: ""
      R5AS_SSL_TRUSTSTORE_TYPE_CONFIG: ""
      R5AS_SSL_CA_CERTIFICATE: ""
      R5AS_SASL_USERNAME: ""
      R5AS_SASL_PASSWORD: ""
      R5AS_SASL_ENABLED_MECHANISMS: ""
      R5AS_AUTOCALE_EVALUATION_INTERVAL: ${R5AS_AUTOCALE_EVALUATION_INTERVAL:-4000}
      R5AS_TRAEFIK_HOST: ${TRAEFIK_HOST:-localhost}
      R5AS_AUTH_SECRET: ${R5AS_AUTH_SECRET}
      R5AS_AUTH_JWT_TTL_MINUTES: ${R5AS_AUTH_JWT_TTL_MINUTES:-800}
    labels:
      - "prometheus.scrape=true"
      - "prometheus.path=/metrics"
      - "traefik.enable=true"
      - "traefik.http.routers.autoscale-springdoc.rule=PathPrefix(`/as/v1/autoscale/v3`)"
      - "traefik.http.routers.autoscale-springdoc.entrypoints=web"
      - "traefik.http.routers.autoscale-springdoc.middlewares=strip-autoscale@docker"
      - "traefik.http.middlewares.strip-autoscale.stripprefix.prefixes=/as/v1/autoscale"
      - "traefik.http.middlewares.strip-autoscale.stripprefix.forceSlash=false"
      - "traefik.http.routers.autoscale.rule=PathPrefix(`/as/v1/autoscale`)"
      - "traefik.http.routers.autoscale.entrypoints=web"
      - "traefik.http.routers.autoscale.middlewares=strip-m-autoscale@docker"
      - "traefik.http.middlewares.strip-m-autoscale.stripprefix.prefixes=/as/v1"
      - "traefik.http.middlewares.strip-m-autoscale.stripprefix.forceSlash=false"

  as-auth:
    image: red5pro/as-auth:${AS_VERSION:-latest}
    restart: unless-stopped
    ports:
      - 10080:8080
    environment:
      R5AS_AUTH_SECRET: ${R5AS_AUTH_SECRET:?R5AS_AUTH_SECRET is not set}
      R5AS_AUTH_JWT_TTL_MINUTES: ${R5AS_AUTH_JWT_TTL_MINUTES:-800}
      R5AS_AUTH_USER: ${R5AS_AUTH_USER:?R5AS_AUTH_USER is not set}
      R5AS_AUTH_PASS: ${R5AS_AUTH_PASS:?R5AS_AUTH_PASS is not set}
      R5AS_PROXY_USER: ${R5AS_PROXY_USER:?R5AS_PROXY_USER is not set}
      R5AS_PROXY_PASS: ${R5AS_PROXY_PASS:?R5AS_PROXY_PASS is not set}
      R5AS_SPATIAL_USER: ${R5AS_SPATIAL_USER:-spatial_user}
      R5AS_SPATIAL_PASS: ${R5AS_SPATIAL_PASS:-spatial_pass}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.asauth.rule=PathPrefix(`/as/v1/auth`)"
      - "traefik.http.routers.asauth.entrypoints=web"
      - "traefik.http.routers.asauth.middlewares=strip-asauth@docker"     
      - "traefik.http.middlewares.strip-asauth.stripprefix.prefixes=/as/v1"
      - "traefik.http.middlewares.strip-asauth.stripprefix.forceSlash=false"

  as-streams:
    image: red5pro/as-streams:${AS_VERSION:-latest}
    restart: unless-stopped
    deploy:
      replicas: 1
    depends_on:
      kafka0:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/streams/stream/healthz"]
      start_period: 10s
    environment:
      R5AS_STATE_DIRECTORY: /root/kafka-streams
      R5AS_AUTH_SECRET: ${R5AS_AUTH_SECRET:?R5AS_AUTH_SECRET is not set}
      R5AS_AUTH_JWT_TTL_MINUTES: ${R5AS_AUTH_JWT_TTL_MINUTES:-800}
      R5AS_BOOTSTRAP_SERVERS: kafka0:29092
      R5AS_SECURITY_PROTOCOL_CONFIG: ""
      R5AS_SSL_KEYSTORE_TYPE_CONFIG: ""
      R5AS_SSL_TRUSTSTORE_TYPE_CONFIG: ""
      R5AS_SSL_CA_CERTIFICATE: ""
      R5AS_SASL_USERNAME: ""
      R5AS_SASL_PASSWORD: ""
      R5AS_SASL_ENABLED_MECHANISMS: ""
      R5AS_MESSAGE_BUS_CLEAR_STREAMS: ${R5AS_MESSAGE_BUS_CLEAR_STREAMS:-false}
      R5AS_AUTOSCALE_PARTITIONS: ${R5AS_AUTOSCALE_PARTITIONS:-1}
      R5AS_REPLICATION_FACTOR: ${R5AS_REPLICATION_FACTOR:-1}
      R5AS_RESTREAMER_REDISTRIBUTE_SECONDS: ${R5AS_RESTREAMER_REDISTRIBUTE_SECONDS:-60}
      R5AS_STREAM_TIMEOUT: ${R5AS_STREAM_TIMEOUT:-30}
    labels:
      - "prometheus.scrape=true"
      - "prometheus.path=/streams/metrics"
      - "traefik.enable=true"
      - "traefik.http.routers.asstreams.rule=PathPrefix(`/as/v1/streams`)"
      - "traefik.http.routers.asstreams.entrypoints=web"
      - "traefik.http.routers.asstreams.middlewares=strip-asstreams@docker"
      - "traefik.http.middlewares.strip-asstreams.stripprefix.prefixes=/as/v1"
      - "traefik.http.middlewares.strip-asstreams.stripprefix.forceSlash=false"

  reverse-proxy:
    image: traefik
    restart: unless-stopped
    command: 
      --api.insecure=true
      --api.dashboard=true
      --providers.docker=true
      --providers.docker.exposedbydefault=false
      --entrypoints.web.address=:80 # HTTP only
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-ui.entrypoints=web"
      - "traefik.http.routers.traefik-ui.rule=PathPrefix(`/dashboard`) || PathPrefix(`/api`)"
      - "traefik.http.services.traefik-ui.loadbalancer.server.port=8080"

  as-testbeds:
     image: red5pro/as-testbed:${AS_VERSION:-latest}
     restart: unless-stopped
     depends_on:
       as-auth:
         condition: service_started
       as-streams:
         condition: service_started
       as-admin:
         condition: service_started
     ports:
       - 12080:80
     labels:
       - "traefik.enable=true"
       - "traefik.http.routers.red5.rule=PathPrefix(`/red5`)"
       - "traefik.http.routers.service.tls=true"
       - "traefik.http.routers.red5.entrypoints=web"
       - "traefik.http.services.testbed-service.loadbalancer.server.port=80"
       - "traefik.http.routers.red5css.rule=PathPrefix(`/css`)"
       - "traefik.http.routers.red5images.rule=PathPrefix(`/images`)"
       - "traefik.http.routers.red5lib.rule=PathPrefix(`/lib`)"
       - "traefik.http.routers.red5script.rule=PathPrefix(`/script`)"
       - "traefik.http.routers.red5.middlewares=our-slash@docker"
       - "traefik.http.middlewares.our-slash.chain.middlewares=strip-prefix-1,strip-prefix-2"
       - "traefik.http.middlewares.strip-prefix-1.redirectregex.regex=^(https?://[^/]+/[a-z0-9_]+)$$"
       - "traefik.http.middlewares.strip-prefix-1.redirectregex.replacement=$${1}/"
       - "traefik.http.middlewares.strip-prefix-1.redirectregex.permanent=true"
       - "traefik.http.middlewares.strip-prefix-2.stripprefixregex.regex=/[a-z0-9_]+"

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    restart: unless-stopped
    ports:
      - 8090:8080
    depends_on:
      kafka0:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka0:29092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect0:8083
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_AUDIT_TOPICAUDITENABLED: 'true'
      KAFKA_CLUSTERS_0_AUDIT_CONSOLEAUDITENABLED: 'true'
      SERVER_SERVLET_CONTEXT_PATH: /kafka
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kafka-ui.rule=PathPrefix(`/kafka`)"
      - "traefik.http.routers.kafka-ui.entrypoints=web"

  as-debug-ui:
    image: red5pro/as-debug-ui:${AS_VERSION:-latest}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.caddy.entrypoints=web"
      - "traefik.http.routers.caddy.rule=PathPrefix(`/`)"

volumes:
  kafka-data: